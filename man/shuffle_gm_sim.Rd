% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Real-networks.R
\name{shuffle_gm_sim}
\alias{shuffle_gm_sim}
\alias{par_run_all_gm}
\title{Shuffle graph matching simulation for one graph run in parallel}
\usage{
shuffle_gm_sim(
  graph,
  cl = NULL,
  p_grid = 10^(-seq(0.5, 4, length.out = 8)),
  nmc = 30,
  ask = TRUE
)

par_run_all_gm(
  data_df = NULL,
  nmc = 30,
  p_grid = 10^(-seq(0.5, 4, length.out = 8)),
  ask = TRUE
)
}
\arguments{
\item{graph}{Graph to run on}

\item{cl}{Cluster generated by parallel::makeCluster. 
If NULL then not run in parallel.}

\item{p_grid}{Grid of error probabilities}

\item{nmc}{number of Monte Carlo replicates}

\item{ask}{Whether to warn about long run times.}

\item{data_df}{A tibble that is a subset of \code{gmmle_data}.}
}
\value{
A list of lists of graph mathching results for each p in p_grid
}
\description{
For a given graph and probability p, this
 procedure randomly flips edges with probability p and
 then matches the noisy graph to the original starting
 at the "true" correspondence.
 This procedure is run nmc times for each p in p_grid.
 See local_gm_errors. par_run_all_gm runs this once for
 each graph in the package, corresponding to the simulation
 in the manuscript.
}
\section{Functions}{
\itemize{
\item \code{par_run_all_gm}: 
}}

\examples{
shuffle_gm_sim(karate, p_grid = c(0.01, 0.1),
  nmc = 2, ask = FALSE)

}
